@{
    ViewData["Title"] = "Maps";
}
<h2>@ViewData["Maps"]</h2>
<h3>@ViewData["Message"]</h3>

<style>
    #floating-panel {
        position: absolute;
        top: 10vh;
        left: 50%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

    #form {
        position: absolute;
        right: 10%;
        top: 20vh;
    }
</style>

<div id="form">
    <form asp-controller="Markers" asp-action="PostMarker" method="post">
        <label for="Label">place name: </label>
        <input type="text" name="Label"><br>

        <label for="Latitude">latitude: </label>
        <input type="text" name="Latitude"><br>

        <label for="Longitude">Longitude: </label>
        <input type="text" name="Longitude"><br>

        <label for="Description">description: </label>
        <input type="text" name="Description"><br>

        <input type="submit" id="dupa" value="przeslij do bazy">
    </form>
</div>

<div id="floating-panel">
    <input onclick="clearMarkers();" type=button value="Hide Markers">
    <input onclick="showMarkers();" type=button value="Show All Markers">
    <input onclick="deleteMarkers();" type=button value="Delete Markers">
</div>
<div id="map" style="width:400px;height:400px;"></div>

<script>

    //temp variables
    //----------------
    var form = document.getElementsByTagName("form")[0];
    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var labelIndex = 0;
    var map;
    var locations = [
        {
            cityName: "cracow",
            latitude: 50.0647,
            longitude: 19.9450
        }
    ];
    var markers = [];



    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: new google.maps.LatLng(locations[0].latitude, locations[0].longitude),
            zoom: 10,
            mapTypeId: 'terrain'
        });

        // This event listener will call addMarker() when the map is clicked.
        map.addListener('click', function (event) {
            addMarker(event.latLng);
            addParametersToInputs();
        });
    }

    function addParametersToInputs() {
        form[0].value = markers[markers.length - 1].label;
        form[1].value = markers[markers.length - 1].getPosition().lat();
        form[2].value = markers[markers.length - 1].getPosition().lng();
        form[3].value = window.prompt("podaj opis markera");
    }

    //Addmarker--------------
    function addMarker(location) {
        var marker = new google.maps.Marker({
            position: location,
            label: labels[labelIndex++ % labels.length],
            map: map
        });
        markers.push(marker);
    };

    // Sets the map on all markers in the array.
    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
        setMapOnAll(null);
    }

    // Shows any markers currently in the array.
    function showMarkers() {
        setMapOnAll(map);
    }

    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
        clearMarkers();
        markers = [];
        labelIndex = 0;
        form.reset();
    }
    //prevent default on submit click id="dupa"
    function prevDef(e) {
        e.preventDefault();
    }

    google.maps.event.addDomListener(window, 'load', initialize);
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtPw4bZTkJM6tD97-t7yLcOh55iY8MQ1Y&callback=initMap" async defer></script>


